ARG PHP_VERSION=7.4.28
FROM docker.io/amd64/php:${PHP_VERSION}-fpm-alpine3.15

# Install system dependencies
RUN apk --no-cache update && apk --no-cache add git \
    curl \
    zip \
    unzip \
    shadow \
    git \
    mariadb-client \
    libzip-dev \
    imagemagick-dev \
    libpng-dev \
    oniguruma-dev \
    libxml2-dev \
    autoconf \
    gcc \
    musl-dev \
    make

RUN pecl install imagick \
    && docker-php-ext-enable imagick

# Install PHP extensions
RUN docker-php-ext-install pdo_mysql mbstring zip exif pcntl bcmath gd

# Install Composer
ARG COMPOSER_VERSION=2.2.6
COPY --from=docker.io/amd64/composer:${COMPOSER_VERSION} /usr/bin/composer /usr/bin/composer

# Create system user to run Composer and Artisan commands
ARG APP_UID=1000
ARG APP_USER=crater-user
RUN useradd -G www-data,root -u $APP_UID -d /home/$APP_USER $APP_USER
# Create composer workdir with permissions
RUN mkdir -p /home/$APP_USER/.composer && \
    chown -R ${APP_USER}:${APP_USER} /home/${APP_USER}

# Install PHP uploads config
COPY uploads.ini /usr/local/etc/php/conf.d/uploads.iniWX
# Install crontab
COPY crontab /etc/crontabs/${APP_USER}

# Download app code from Git, create default .env
ARG APP_VERSION=6.0.6
RUN cd /var && rm -rf www && \
    git clone --depth 1 --branch $APP_VERSION https://github.com/crater-invoice/crater www && \
    cat /var/www/.env.example > /var/www/.env && \
    chown -R ${APP_USER}:www-data /var/www
# Update app folders permissions
RUN chmod -R 775 /var/www/storage/framework /var/www/storage/logs /var/www/bootstrap/cache

# Set working directory
WORKDIR /var/www
# Change user
USER $APP_USER
# Run initial setup
RUN composer install --no-interaction --prefer-dist --optimize-autoloader && \
    php artisan storage:link || true && \
    php artisan key:generate --force
